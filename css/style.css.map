{"version":3,"sources":["style.css","_sass/stars/foundation/scss/foundation/components/_global.scss","_sass/planets/base/_base.scss","_sass/planets/base/_embedded_content.scss","_sass/planets/base/_forms.scss","_sass/planets/base/_grouping_content.scss","_sass/planets/base/_html5_display_definitions.scss","_sass/planets/base/_links.scss","_sass/planets/base/_tables.scss","_sass/planets/base/_text_level_semantics.scss","_sass/planets/wp/_wp_defaults.scss","_sass/planets/plugins/_cf7.scss","_sass/stars/zemplate/_variables.scss","_sass/planets/layouts/_torso_with_sidebar.scss","_sass/stars/foundation/scss/foundation/components/_grid.scss","_sass/planets/layouts/_wrappers.scss","_sass/style.scss","_sass/stars/zemplate/_mixins.scss","_sass/comets/_fourohfour.scss","_sass/debris/_shame.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["/*!\nTheme Name: Zemplate + Foundation\nTheme URI: http://zenman.com\nDescription: An empty framework built on Foundation. Love that blue yeti.\nVersion: 3.0\nAuthor: Dominic Magnifico and Tomas Mulder\nTags: zemplate, naked, clean, basic, fondation, semantic\n*/meta.foundation-version{font-family:\"/{{VERSION}}/\"}meta.foundation-mq-small{font-family:\"/only screen/\";width:0em}meta.foundation-mq-medium{font-family:\"/only screen and (min-width:40.063em)/\";width:40.063em}meta.foundation-mq-large{font-family:\"/only screen and (min-width:64.063em)/\";width:64.063em}meta.foundation-mq-xlarge{font-family:\"/only screen and (min-width:90.063em)/\";width:90.063em}meta.foundation-mq-xxlarge{font-family:\"/only screen and (min-width:120.063em)/\";width:120.063em}meta.foundation-data-attribute-namespace{font-family:false}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}img{max-width:100%;height:auto}body{margin:0}*,*:before,*:after{box-sizing:border-box}img{border:0}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=\"button\"],input[type=\"reset\"],input[type=\"submit\"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=\"checkbox\"],input[type=\"radio\"]{box-sizing:border-box;padding:0}input[type=\"number\"]::-webkit-inner-spin-button,input[type=\"number\"]::-webkit-outer-spin-button{height:auto}input[type=\"search\"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=\"search\"]::-webkit-search-cancel-button,input[type=\"search\"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:transparent}a:active,a:hover{outline:0}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}.alignnone,img.alignnone{margin:5px 20px 20px 0}.aligncenter,img.aligncenter{text-align:center;display:block;margin:5px auto 5px auto}.alignright,img.alignright{float:right;margin:5px 0 20px 20px}.alignleft,img.alignleft{float:left;margin:5px 20px 20px 0}.wp-caption{clear:both;max-width:96%;padding:5px 3px 10px;text-align:center;background:#fff;border:1px solid #f0f0f0}.wp-caption img{height:auto;max-width:98.5%;width:auto;margin:0;padding:0;border:0 none}.wp-caption .wp-caption-text{margin:0;padding:0 4px 5px;font-size:11px;line-height:17px}.wp-caption.alignright{margin:5px 0 20px 20px}.wp-caption.alignleft{margin:5px 20px 20px 0}.wp-caption.alignnone{margin:5px 20px 20px 0}.wpcf7 input,.wpcf7 textarea{width:100%;padding:0;margin:0}.wpcf7 span.wpcf7-not-valid-tip{padding:5px;color:#fff;background:#DE5D5D}.wpcf7 div.wpcf7-response-output{text-align:center;border:none}.wpcf7 div.wpcf7-response-output.wpcf7-validation-errors{background:#EBE857}.wpcf7 div.wpcf7-response-output.wpcf7-mail-sent-ok{background:#6ADE72}[class*=\"torso--sidebar\"] [class*=\"torso__content\"]{padding-left:0.9375rem;padding-right:0.9375rem;width:66.66667%;float:left}[class*=\"torso--sidebar\"] [class*=\"torso__sidebar\"]{padding-left:0.9375rem;padding-right:0.9375rem;width:33.33333%;float:left}[class*=\"__inner\"]{width:100%;margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;max-width:1140px}[class*=\"__inner\"]:before,[class*=\"__inner\"]:after{content:\" \";display:table}[class*=\"__inner\"]:after{clear:both}html,body{height:99.99999%}.wrap-all-the-things{display:table;table-layout:fixed;height:100%;width:100%}.main-head,.main-torso,.main-foot{display:table-row;height:1px}.main-torso{height:auto}.foot-nav li{float:left;list-style:none}.foot-nav li ul{padding:0}.foot-nav li li{clear:both}.foot-nav li a{display:block}.foot-nav ul ul{padding:0}.foot-nav ul ul li{float:left;clear:both}.head-nav{position:relative;z-index:10}.head-nav ul li{display:block;float:left;list-style:none}.head-nav ul ul{visibility:hidden;padding:0;transition-property:opacity,visibility,background-color;transition-duration:0.3s,0s;transition-delay:0s,0.3s}.head-nav ul ul:after{content:\"\";position:absolute;top:-1.2em;bottom:-50px;left:-50px;right:-50px;background-color:#000;opacity:0;z-index:-1}.head-nav li ul{display:block;position:absolute;opacity:0}.head-nav li:hover ul{opacity:1;visibility:visible;transition-delay:0s, 0s}.fourofour__content{padding-left:0.9375rem;padding-right:0.9375rem;width:100%;float:left}body{background-color:#00caa9;font-family:'Vollkorn', serif}header,footer{text-align:center;font-style:italic}[class*=\"__inner\"]{max-width:960px;margin:0 auto}a{overflow:hidden;position:relative;display:inline-block;padding:0 .2em;color:whitesmoke;text-decoration:none;border-radius:.2em;transition:color 300ms, box-shadow 300ms}a.hoverd,a:visited,a:hover{box-shadow:0 1px 1px rgba(0,0,0,0.3);color:teal}a.hoverd:before,a:visited:before,a:hover:before{top:0;background-color:aquamarine}a:before{content:\"\";position:absolute;z-index:-1;bottom:0;top:calc(100% - 1px);left:0;right:0;background-color:rgba(127,255,212,0.5);transition:top 200ms}h1,h2,h3,h4,h5,h6{font-family:'Signika', sans-serif;font-weight:bold;text-shadow:0 1px 1px rgba(0,0,0,0.2);color:aquamarine}.resume{padding:1rem}\n\n","// Foundation by ZURB\n// foundation.zurb.com\n// Licensed under MIT Open Source\n\n@import \"../functions\";\n//\n// Foundation Variables\n//\n\n// Data attribute namespace\n// styles get applied to [data-mysite-plugin], etc\n$namespace: false !default;\n\n// The default font-size is set to 100% of the browser style sheet (usually 16px)\n// for compatibility with browser-based text zoom or user-set defaults.\n\n// Since the typical default browser font-size is 16px, that makes the calculation for grid size.\n// If you want your base font-size to be different and not have it affect the grid breakpoints,\n// set $rem-base to $base-font-size and make sure $base-font-size is a px value.\n$base-font-size: 100% !default;\n\n// $base-line-height is 24px while $base-font-size is 16px\n$base-line-height: 1.5 !default;\n\n//\n// Global Foundation Mixins\n//\n\n// @mixins\n//\n// We use this to control border radius.\n// $radius - Default: $global-radius || 4px\n@mixin radius($radius:$global-radius) {\n  @if $radius {\n    border-radius: $radius;\n  }\n}\n\n// @mixins\n//\n// We use this to create equal side border radius on elements.\n// $side - Options: left, right, top, bottom\n@mixin side-radius($side, $radius:$global-radius) {\n  @if ($side == left or $side == right) {\n    -webkit-border-bottom-#{$side}-radius: $radius;\n    -webkit-border-top-#{$side}-radius: $radius;\n    border-bottom-#{$side}-radius: $radius;\n    border-top-#{$side}-radius: $radius;\n  } @else {\n    -webkit-#{$side}-left-radius: $radius;\n    -webkit-#{$side}-right-radius: $radius;\n    border-#{$side}-left-radius: $radius;\n    border-#{$side}-right-radius: $radius;\n  }\n}\n\n// @mixins\n//\n// We can control whether or not we have inset shadows edges.\n// $active - Default: true, Options: false\n@mixin inset-shadow($active:true) {\n  box-shadow: $shiny-edge-size $shiny-edge-color inset;\n\n  @if $active { &:active {\n    box-shadow: $shiny-edge-size $shiny-edge-active-color inset; } }\n}\n\n// @mixins\n//\n// We use this to add transitions to elements\n// $property - Default: all, Options: http://www.w3.org/TR/css3-transitions/#animatable-properties\n// $speed - Default: 300ms\n// $ease - Default:ease-out, Options: http://css-tricks.com/almanac/properties/t/transition-timing-function/\n@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {\n  transition: $property $speed $ease;\n}\n\n// @mixins\n//\n// We use this to add box-sizing across browser prefixes\n@mixin box-sizing($type:border-box) {\n  -webkit-box-sizing: $type; // Android < 2.3, iOS < 4\n     -moz-box-sizing: $type; // Firefox < 29\n          box-sizing: $type; // Chrome, IE 8+, Opera, Safari 5.1\n}\n\n// @mixins\n//\n// We use this to create isosceles triangles\n// $triangle-size - Used to set border-size. No default, set a px or em size.\n// $triangle-color - Used to set border-color which makes up triangle. No default\n// $triangle-direction - Used to determine which direction triangle points. Options: top, bottom, left, right\n@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {\n  content: \"\";\n  display: block;\n  width: 0;\n  height: 0;\n  border: inset $triangle-size;\n  @if ($triangle-direction == top) {\n    border-color: $triangle-color transparent transparent transparent;\n    border-top-style: solid;\n  }\n  @if ($triangle-direction == bottom) {\n    border-color: transparent transparent $triangle-color transparent;\n    border-bottom-style: solid;\n  }\n  @if ($triangle-direction == left) {\n    border-color: transparent transparent transparent $triangle-color;\n    border-left-style: solid;\n  }\n  @if ($triangle-direction == right) {\n    border-color: transparent $triangle-color transparent transparent;\n    border-right-style: solid;\n  }\n}\n\n// @mixins\n//\n// We use this to create the icon with three lines aka the hamburger icon, the menu-icon or the navicon\n// $width - Width of hamburger icon in rem\n// $left - If false, icon will be centered horizontally || explicitly set value in rem\n// $top - If false, icon will be centered vertically || explicitly set value in rem\n// $thickness - thickness of lines in hamburger icon, set value in px\n// $gap - spacing between the lines in hamburger icon, set value in px\n// $color - icon color\n// $hover-color - icon color during hover\n// $offcanvas - Set to true of @include in offcanvas\n@mixin hamburger($width, $left, $top, $thickness, $gap, $color, $hover-color, $offcanvas) {\n  span::after {\n    content: \"\";\n    position: absolute;\n    display: block;\n    height: 0;\n\n    @if $offcanvas {\n      @if $top {\n        top: $top;\n      }\n      @else {\n        top: 50%;\n        margin-top: -$width/2;\n      }\n      @if $left {\n        left: $left;\n      }\n      @else {\n        left: ($tabbar-menu-icon-width - $width)/2;\n      }\n    }\n    @else {\n      top: 50%;\n      margin-top: -($width/2);\n      #{$opposite-direction}: $topbar-link-padding;\n    }\n\n    box-shadow:\n      0 0px 0 $thickness $color,\n      0 $gap + $thickness 0 $thickness $color,\n      0 (2 * $gap + 2*$thickness) 0 $thickness $color;\n    width: $width;\n  }\n  span:hover:after {\n    box-shadow:\n      0 0px 0 $thickness $hover-color,\n      0 $gap + $thickness 0 $thickness $hover-color,\n      0 (2 * $gap + 2*$thickness) 0 $thickness $hover-color;\n  }\n}\n\n// We use this to do clear floats\n@mixin clearfix {\n  &:before, &:after { content: \" \"; display: table; }\n  &:after { clear: both; }\n}\n\n// @mixins\n//\n// We use this to add a glowing effect to block elements\n// $selector - Used for selector state. Default: focus, Options: hover, active, visited\n// $fade-time - Default: 300ms\n// $glowing-effect-color - Default: fade-out($primary-color, .25)\n@mixin block-glowing-effect($selector:focus, $fade-time:300ms, $glowing-effect-color:fade-out($primary-color, .25)) {\n  transition: box-shadow $fade-time, border-color $fade-time ease-in-out;\n\n  &:#{$selector} {\n    box-shadow: 0 0 5px $glowing-effect-color;\n    border-color: $glowing-effect-color;\n  }\n}\n\n// @mixins\n//\n// We use this to translate elements in 2D\n// $horizontal: Default: 0\n// $vertical: Default: 0\n@mixin translate2d($horizontal:0, $vertical:0) {\n  transform: translate($horizontal,$vertical)\n}\n\n// @mixins\n//\n// Makes an element visually hidden, but accessible.\n// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n@mixin element-invisible {\n  position: absolute !important;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  clip: rect(1px, 1px, 1px, 1px);\n}\n\n// @mixins\n//\n// Turns off the element-invisible effect.\n@mixin element-invisible-off {\n  position: static !important;\n  height: auto;\n  width: auto;\n  overflow: visible;\n  clip: auto;\n}\n\n// We use these as default colors throughout\n$primary-color: #008CBA !default;   // bondi-blue\n$secondary-color: #e7e7e7 !default; // white-lilac\n$alert-color: #f04124 !default;     // cinnabar\n$success-color: #43AC6A !default;   // sea-green\n$warning-color: #f08a24 !default;   // carrot\n$info-color: #a0d3e8 !default;      // cornflower\n\n$white         : #FFFFFF !default;\n$ghost         : #FAFAFA !default;\n$snow          : #F9F9F9 !default;\n$vapor         : #F6F6F6 !default;\n$white-smoke   : #F5F5F5 !default;\n$silver        : #EFEFEF !default;\n$smoke         : #EEEEEE !default;\n$gainsboro     : #DDDDDD !default;\n$iron          : #CCCCCC !default;\n$base          : #AAAAAA !default;\n$aluminum      : #999999 !default;\n$jumbo         : #888888 !default;\n$monsoon       : #777777 !default;\n$steel         : #666666 !default;\n$charcoal      : #555555 !default;\n$tuatara       : #444444 !default;\n$oil           : #333333 !default;\n$jet           : #222222 !default;\n$black         : #000000 !default;\n\n// We use these to define default font stacks\n$font-family-sans-serif: \"Helvetica Neue\", Helvetica, Roboto, Arial, sans-serif !default;\n$font-family-serif: Georgia, Cambria, \"Times New Roman\", Times, serif !default;\n$font-family-monospace: Consolas, \"Liberation Mono\", Courier, monospace !default;\n\n// We use these to define default font weights\n$font-weight-normal: normal !default;\n$font-weight-bold: bold !default;\n\n// We use these to control various global styles\n$body-bg: #fff !default;\n$body-font-color: #222 !default;\n$body-font-family: $font-family-sans-serif !default;\n$body-font-weight: $font-weight-normal !default;\n$body-font-style: normal !default;\n\n// We use this to control font-smoothing\n$font-smoothing: antialiased !default;\n\n// We use these to control text direction settings\n$text-direction: ltr !default;\n$default-float: left !default;\n$opposite-direction: right !default;\n@if $text-direction == ltr {\n  $default-float: left;\n  $opposite-direction: right;\n} @else {\n  $default-float: right;\n  $opposite-direction: left;\n}\n\n// We use these to make sure border radius matches unless we want it different.\n$global-radius: 3px !default;\n$global-rounded: 1000px !default;\n\n// We use these to control inset shadow shiny edges and depressions.\n$shiny-edge-size: 0 1px 0 !default;\n$shiny-edge-color: rgba(#fff, .5) !default;\n$shiny-edge-active-color: rgba(#000, .2) !default;\n\n// We use this to control whether or not CSS classes come through in the gem files.\n$include-html-classes: true !default;\n$include-print-styles: true !default;\n$include-html-global-classes: $include-html-classes !default;\n\n$column-gutter: rem-calc(30) !default;\n\n// Media Query Ranges\n$small-range: (0em, 40em) !default;\n$medium-range: (40.063em, 64em) !default;\n$large-range: (64.063em, 90em) !default;\n$xlarge-range: (90.063em, 120em) !default;\n$xxlarge-range: (120.063em, 99999999em) !default;\n\n\n$screen: \"only screen\" !default;\n\n$landscape: \"#{$screen} and (orientation: landscape)\" !default;\n$portrait: \"#{$screen} and (orientation: portrait)\" !default;\n\n$small-up: $screen !default;\n$small-only: \"#{$screen} and (max-width: #{upper-bound($small-range)})\" !default;\n\n$medium-up: \"#{$screen} and (min-width:#{lower-bound($medium-range)})\" !default;\n$medium-only: \"#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})\" !default;\n\n$large-up: \"#{$screen} and (min-width:#{lower-bound($large-range)})\" !default;\n$large-only: \"#{$screen} and (min-width:#{lower-bound($large-range)}) and (max-width:#{upper-bound($large-range)})\" !default;\n\n$xlarge-up: \"#{$screen} and (min-width:#{lower-bound($xlarge-range)})\" !default;\n$xlarge-only: \"#{$screen} and (min-width:#{lower-bound($xlarge-range)}) and (max-width:#{upper-bound($xlarge-range)})\" !default;\n\n$xxlarge-up: \"#{$screen} and (min-width:#{lower-bound($xxlarge-range)})\" !default;\n$xxlarge-only: \"#{$screen} and (min-width:#{lower-bound($xxlarge-range)}) and (max-width:#{upper-bound($xxlarge-range)})\" !default;\n\n// Legacy\n$small: $medium-up;\n$medium: $medium-up;\n$large: $large-up;\n\n\n//We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet\n$cursor-auto-value: auto !default;\n$cursor-crosshair-value: crosshair !default;\n$cursor-default-value: default !default;\n$cursor-pointer-value: pointer !default;\n$cursor-help-value: help !default;\n$cursor-text-value: text !default;\n\n\n@include exports(\"global\") {\n\n  // Meta styles are included in all builds, as they are a dependancy of the Javascript.\n  // Used to provide media query values for javascript components.\n  // Forward slash placed around everything to convince PhantomJS to read the value.\n\n  meta.foundation-version {\n    font-family: \"/{{VERSION}}/\";\n  }\n\n  meta.foundation-mq-small {\n    font-family: \"/\" + unquote($small-up) + \"/\";\n    width: lower-bound($small-range);\n  }\n\n  meta.foundation-mq-medium {\n    font-family: \"/\" + unquote($medium-up) + \"/\";\n    width: lower-bound($medium-range);\n  }\n\n  meta.foundation-mq-large {\n    font-family: \"/\" + unquote($large-up) + \"/\";\n    width: lower-bound($large-range);\n  }\n\n  meta.foundation-mq-xlarge {\n    font-family: \"/\" + unquote($xlarge-up) + \"/\";\n    width: lower-bound($xlarge-range);\n  }\n\n  meta.foundation-mq-xxlarge {\n    font-family: \"/\" + unquote($xxlarge-up) + \"/\";\n    width: lower-bound($xxlarge-range);\n  }\n\n  meta.foundation-data-attribute-namespace {\n    font-family: #{$namespace};\n  }\n\n  @if $include-html-global-classes {\n\n    // Must be 100% for off canvas to work\n    html, body { height: 100%; }\n\n    // Set box-sizing globally to handle padding and border widths\n    *,\n    *:before,\n    *:after {\n      @include box-sizing(border-box);\n    }\n\n    html,\n    body { font-size: $base-font-size; }\n\n    // Default body styles\n    body {\n      background: $body-bg;\n      color: $body-font-color;\n      padding: 0;\n      margin: 0;\n      font-family: $body-font-family;\n      font-weight: $body-font-weight;\n      font-style: $body-font-style;\n      line-height: $base-line-height; // Set to $base-line-height to take on browser default of 150%\n      position: relative;\n      cursor: $cursor-auto-value;\n    }\n\n  a:hover { cursor: $cursor-pointer-value; }\n\n    // Grid Defaults to get images and embeds to work properly\n    img { max-width: 100%; height: auto; }\n\n    img { -ms-interpolation-mode: bicubic; }\n\n    #map_canvas,\n    .map_canvas {\n      img,\n      embed,\n      object { max-width: none !important;\n      }\n    }\n\n    // Miscellaneous useful HTML classes\n    .left   { float: left !important; }\n    .right  { float: right !important; }\n    .clearfix     { @include clearfix; }\n    .hide         { display: none; }\n\n    // Font smoothing\n    // Antialiased font smoothing works best for light text on a dark background.\n    // Apply to single elements instead of globally to body.\n    // Note this only applies to webkit-based desktop browsers and Firefox 25 (and later) on the Mac.\n    .antialiased { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }\n\n    // Get rid of gap under images by making them display: inline-block; by default\n    img {\n      display: inline-block;\n      vertical-align: middle;\n    }\n\n    //\n    // Global resets for forms\n    //\n\n    // Make sure textarea takes on height automatically\n    textarea { height: auto; min-height: 50px; }\n\n    // Make select elements 100% width by default\n    select { width: 100%; }\n  }\n}\n","/*------------------------------------*\\\r\n    ::Base\r\n    ------------------------------------*\r\n    ::Normalize.css v3.0.0 | MIT License | git.io/normalize\r\n\\*------------------------------------*/\r\nhtml {\r\n\tfont-family: sans-serif;\r\n\t-ms-text-size-adjust: 100%;\r\n\t-webkit-text-size-adjust: 100%;\r\n}\r\nimg {\r\n\tmax-width: 100%;\r\n\theight: auto;\r\n}\r\nbody {\r\n\tmargin: 0;\r\n}\r\n*, *:before, *:after {\r\n    box-sizing: border-box;\r\n}\r\n","/*------------------------------------*\\\n    ::Embedded Content\n    ------------------------------------*\n    ::Normalize.css v3.0.0 | MIT License | git.io/normalize\n\\*------------------------------------*/\nimg {\n\tborder: 0;\n}\nsvg:not(:root) {\n\toverflow: hidden;\n}","/*------------------------------------*\\\n    ::Forms\n    ------------------------------------*\n    ::Normalize.css v3.0.0 | MIT License | git.io/normalize\n\\*------------------------------------*/\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tcolor: inherit;\n\tfont: inherit;\n\tmargin: 0;\n}\nbutton {\n\toverflow: visible;\n}\nbutton,\nselect {\n\ttext-transform: none;\n}\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n\t-webkit-appearance: button;\n\tcursor: pointer;\n}\nbutton[disabled],\nhtml input[disabled] {\n\tcursor: default;\n}\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n\tborder: 0;\n\tpadding: 0;\n}\ninput {\n\tline-height: normal;\n}\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n\tbox-sizing: border-box;\n\tpadding: 0;\n}\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n\theight: auto;\n}\ninput[type=\"search\"] {\n\t-webkit-appearance: textfield;\n\t-moz-box-sizing: content-box;\n\t-webkit-box-sizing: content-box;\n\tbox-sizing: content-box;\n}\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\nfieldset {\n\tborder: 1px solid #c0c0c0;\n\tmargin: 0 2px;\n\tpadding: 0.35em 0.625em 0.75em;\n}\nlegend {\n\tborder: 0;\n\tpadding: 0;\n}\ntextarea {\n\toverflow: auto;\n}\noptgroup {\n\tfont-weight: bold;\n}","/*------------------------------------*\\\n    ::Grouping Content\n    ------------------------------------*\n    ::Normalize.css v3.0.0 | MIT License | git.io/normalize\n\\*------------------------------------*/\nfigure {\n\tmargin: 1em 40px;\n}\nhr {\n\t-moz-box-sizing: content-box;\n\tbox-sizing: content-box;\n\theight: 0;\n}\npre {\n\toverflow: auto;\n}\ncode,\nkbd,\npre,\nsamp {\n\tfont-family: monospace, monospace;\n\tfont-size: 1em;\n}","/*------------------------------------*\\\n    ::HTML5 Display Definitions\n    ------------------------------------*\n    ::Normalize.css v3.0.0 | MIT License | git.io/normalize\n\\*------------------------------------*/\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nnav,\nsection,\nsummary {\n\tdisplay: block;\n}\naudio,\ncanvas,\nprogress,\nvideo {\n\tdisplay: inline-block;\n\tvertical-align: baseline;\n}\naudio:not([controls]) {\n\tdisplay: none;\n\theight: 0;\n}\n[hidden],\ntemplate {\n\tdisplay: none;\n}\n","/*------------------------------------*\\\n    ::Links\n    ------------------------------------*\n    ::Normalize.css v3.0.0 | MIT License | git.io/normalize\n\\*------------------------------------*/\na {\n\tbackground: transparent;\n}\na:active,\na:hover {\n\toutline: 0;\n}","/*------------------------------------*\\\n    ::Tables\n    ------------------------------------*\n    ::Normalize.css v3.0.0 | MIT License | git.io/normalize\n\\*------------------------------------*/\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\ntd,\nth {\n\tpadding: 0;\n}","/*------------------------------------*\\\n    ::Text Level Semantics\n    ------------------------------------*\n    ::Normalize.css v3.0.0 | MIT License | git.io/normalize\n\\*------------------------------------*/\nabbr[title] {\n\tborder-bottom: 1px dotted;\n}\nb,\nstrong {\n\tfont-weight: bold;\n}\ndfn {\n\tfont-style: italic;\n}\nh1 {\n\tfont-size: 2em;\n\tmargin: 0.67em 0;\n}\nmark {\n\tbackground: #ff0;\n\tcolor: #000;\n}\nsmall {\n\tfont-size: 80%;\n}\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\nsup {\n\ttop: -0.5em;\n}\nsub {\n\tbottom: -0.25em;\n}","/*------------------------------------*\\\r\n    ::WP Default Classes\r\n\t\t::Alignment\r\n\t\t::Captions\r\n\\*------------------------------------*/\r\n\r\n/*------------------------------------*\\\r\n    ::Alignment\r\n\\*------------------------------------*/\r\n.alignnone,\r\nimg.alignnone {\r\n    margin: 5px 20px 20px 0;\r\n}\r\n\r\n.aligncenter,\r\nimg.aligncenter {\r\n    text-align: center;\r\n    display: block;\r\n    margin: 5px auto 5px auto;\r\n}\r\n\r\n.alignright,\r\nimg.alignright {\r\n    float:right;\r\n    margin: 5px 0 20px 20px;\r\n}\r\n\r\n.alignleft,\r\nimg.alignleft {\r\n    float: left;\r\n    margin: 5px 20px 20px 0;\r\n}\r\n\r\n/*------------------------------------*\\\r\n    ::Captions\r\n\\*------------------------------------*/\r\n.wp-caption {\r\n\tclear: both;\r\n    max-width: 96%;\r\n    padding: 5px 3px 10px;\r\n    text-align: center;\r\n\tbackground: #fff;\r\n    border: 1px solid #f0f0f0;\r\n\timg{\r\n\t    height: auto;\r\n\t    max-width: 98.5%;\r\n\t    width: auto;\r\n\t    margin: 0;\r\n\t    padding: 0;\r\n\t    border: 0 none;\r\n\t}\r\n\t.wp-caption-text {\r\n\t    margin: 0;\r\n\t    padding: 0 4px 5px;\r\n\t    font-size: 11px;\r\n\t    line-height: 17px;\r\n\t}\r\n\t&.alignright{\r\n\t    margin: 5px 0 20px 20px;\r\n\t}\r\n\t&.alignleft {\r\n\t    margin: 5px 20px 20px 0;\r\n\t}\r\n\t&.alignnone {\r\n\t    margin: 5px 20px 20px 0;\r\n\t}\r\n}","/*------------------------------------*\\\n    ::Default CF7 Styling\n\\*------------------------------------*/\n.wpcf7{\n\tinput,\n\ttextarea {\n\t\twidth: 100%;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\tspan.wpcf7-not-valid-tip{\n\t\tpadding: 5px;\n\t\tcolor: #fff;\n\t\tbackground: $color-bad;\n\t}\n\tdiv.wpcf7-response-output{\n\t\ttext-align: center;\n\t\tborder:none;\n\t\t&.wpcf7-validation-errors{\n\t\t\tbackground: $color-meh;\n\t\t}\n\t\t&.wpcf7-mail-sent-ok{\n\t\t\tbackground: $color-good;\n\t\t}\n\t}\n}","/*------------------------------------*\\\n    ::Variables\n    ----------------------------------*\n    ::Colors\n    ::Breakpoints\n    ::Layout\n    ::Text Styling\n\\*------------------------------------*/\n\n/*------------------------------------*\\\n    ::Colors\n\\*------------------------------------*/\n\n//primary colors / page anchor tags\n$color-1:           #2b2b2b;\n$color-1-light:     lighten($color-1,20%);\n$color-1-dark:      darken($color-1,20%);\n\n//secondary colors / global nav and Local Nav.\n$color-2:           #007DAB;\n$color-2-light:     lighten($color-2,20%);\n$color-2-dark:      darken($color-2,20%);\n\n//tertiary colors / secondary global nav and secondary local nav.\n$color-3:           #F79021;\n$color-3-light:     lighten($color-3,20%);\n$color-3-dark:      darken($color-3,20%);\n\n//alert colors\n$color-good:        #6ADE72;\n$color-bad:         #DE5D5D;\n$color-meh:         #EBE857;\n\n/*------------------------------------*\\\n    ::Breakpoints\n\\*------------------------------------*/\n$galaxy:        1140px;\n$solarsystem:   1024px;\n$planetary:     480px;\n\n/*------------------------------------*\\\n    ::Layout\n\\*------------------------------------*/\n$pad:       0.9375rem;\n\n/*------------------------------------*\\\n    ::Text Styling\n\\*------------------------------------*/\n\n//font colors\n$txt-color-1:       $color-1-dark;\n$txt-color-2:       $color-1-dark;\n$txt-color-3:       $color-3-dark;\n\n//font families\n$fam-heading:       \"Century Gothic\", sans-serif;\n$fam-body:          palatino, serif;\n$fam-nav:           $fam-body;\n\n//internal/page anchor tags\n$a-color-link:      $color-2;\n$a-color-visited:   $a-color-link;\n$a-color-hover:     lighten($a-color-link,20%);\n$a-color-active:    lighten($a-color-link,30%);\n\n//global nav\n$g-color-link:      $color-3;\n$g-color-visited:   $g-color-link;\n$g-color-hover:     lighten($g-color-link,20%);\n$g-color-active:    lighten($g-color-link,30%);\n\n//local nav\n$l-color-link:      $g-color-link;\n$l-color-visited:   $l-color-link;\n$l-color-hover:     lighten($l-color-link,20%);\n$l-color-active:    lighten($l-color-link,30%);\n\n//secondary global nav\n$g-2-color-link:    $color-2;\n$g-2-color-visited: $g-2-color-link;\n$g-2-color-hover:   lighten($g-2-color-link,20%);\n$g-2-color-active:  lighten($g-2-color-link,20%);\n\n//secondary local nav\n$l-2-color-link:    $g-color-link;\n$l-2-color-visited: $l-2-color-link;\n$l-2-color-hover:   lighten($l-2-color-link,20%);\n$l-2-color-active:  lighten($l-2-color-link,10%);","/*------------------------------------*\\\n    ::Torso With Sidebar\n\\*------------------------------------*/\n[class*=\"torso--sidebar\"] {\n    [class*=\"torso__content\"]{\n\t\t@include grid-column(8);\n    }\n    [class*=\"torso__sidebar\"]{\n        @include grid-column(4);\n    }\n}","// Foundation by ZURB\n// foundation.zurb.com\n// Licensed under MIT Open Source\n\n@import \"global\";\n\n//\n// @variables\n//\n$include-html-grid-classes: $include-html-classes !default;\n$include-xl-html-grid-classes: false !default;\n\n$row-width: rem-calc(1000) !default;\n$total-columns: 12 !default;\n\n$last-child-float: $opposite-direction !default;\n\n//\n// Grid Functions\n//\n\n// Deprecated: We'll drop support for this in 5.1, use grid-calc()\n@function gridCalc($colNumber, $totalColumns) {\n  @warn \"gridCalc() is deprecated, use grid-calc()\";\n  @return grid-calc($colNumber, $totalColumns);\n}\n\n// @FUNCTION\n// $colNumber - Found in settings file\n// $totalColumns - Found in settings file\n@function grid-calc($colNumber, $totalColumns) {\n  @return percentage(($colNumber / $totalColumns));\n}\n\n//\n// @mixins\n//\n\n// For creating container, nested, and collapsed rows.\n//\n//\n// $behavior - Any special behavior for this row? Default: false. Options: nest, collapse, nest-collapse, false.\n@mixin grid-row($behavior: false) {\n\n  // use @include grid-row(nest); to include a nested row\n  @if $behavior == nest {\n    width: auto;\n    margin-#{$default-float}: -($column-gutter/2);\n    margin-#{$opposite-direction}: -($column-gutter/2);\n    margin-top: 0;\n    margin-bottom: 0;\n    max-width: none;\n  }\n\n  // use @include grid-row(collapse); to collapsed a container row margins\n  @else if $behavior == collapse {\n    width: 100%;\n    margin: 0;\n    max-width: $row-width;\n  }\n\n  // use @include grid-row(nest-collapse); to collapse outer margins on a nested row\n  @else if $behavior == nest-collapse {\n    width: auto;\n    margin: 0;\n    max-width: none;\n  }\n\n  // use @include grid-row; to use a container row\n  @else {\n    width: 100%;\n    margin-#{$default-float}: auto;\n    margin-#{$opposite-direction}: auto;\n    margin-top: 0;\n    margin-bottom: 0;\n    max-width: $row-width;\n  }\n\n  // Clearfix for all rows\n  @include clearfix();\n}\n\n// Creates a column, should be used inside of a media query to control layouts\n//\n// $columns - The number of columns this should be\n// $last-column - Is this the last column? Default: false.\n// $center - Center these columns? Default: false.\n// $offset - # of columns to offset. Default: false.\n// $push - # of columns to push. Default: false.\n// $pull - # of columns to pull. Default: false.\n// $collapse - Get rid of gutter padding on column? Default: false.\n// $float - Should this float? Default: true. Options: true, false, left, right.\n@mixin grid-column(\n  $columns:false,\n  $last-column:false,\n  $center:false,\n  $offset:false,\n  $push:false,\n  $pull:false,\n  $collapse:false,\n  $float:true,\n  $position:false) {\n\n  // If positioned for default .column, include relative position\n  // push and pull require position set\n  @if $position or $push or $pull {\n    position: relative;\n  }\n\n  // If collapsed, get rid of gutter padding\n  @if $collapse {\n    padding-left: 0;\n    padding-right: 0;\n  }\n\n  // Gutter padding whenever a column isn't set to collapse\n  // (use $collapse:null to do nothing)\n  @else if $collapse == false {\n    padding-left: $column-gutter / 2;\n    padding-right: $column-gutter / 2;\n  }\n\n  // If a column number is given, calculate width\n  @if $columns {\n    width: grid-calc($columns, $total-columns);\n\n    // If last column, float naturally instead of to the right\n    @if $last-column { float: $opposite-direction; }\n  }\n\n  // Source Ordering, adds left/right depending on which you use.\n  @if $push { #{$default-float}: grid-calc($push, $total-columns); #{$opposite-direction}: auto; }\n  @if $pull { #{$opposite-direction}: grid-calc($pull, $total-columns); #{$default-float}: auto; }\n\n  @if $float {\n    @if $float == left or $float == true { float: $default-float; }\n    @else if $float == right { float: $opposite-direction; }\n    @else { float: none; }\n  }\n\n  // If centered, get rid of float and add appropriate margins\n  @if $center {\n    margin-#{$default-float}: auto;\n    margin-#{$opposite-direction}: auto;\n    float: none;\n  }\n\n  // If offset, calculate appropriate margins\n  @if $offset { margin-#{$default-float}: grid-calc($offset, $total-columns) !important; }\n\n}\n\n// Create presentational classes for grid\n//\n// $size - Name of class to use, i.e. \"large\" will generate .large-1, .large-2, etc.\n@mixin grid-html-classes($size) {\n\n  @for $i from 0 through $total-columns - 1 {\n    .#{$size}-push-#{$i} {\n      @include grid-column($push:$i, $collapse:null, $float:false);\n    }\n    .#{$size}-pull-#{$i} {\n      @include grid-column($pull:$i, $collapse:null, $float:false);\n    }\n  }\n\n  .column,\n  .columns { @include grid-column($columns:false, $position:true); }\n\n\n  @for $i from 1 through $total-columns {\n    .#{$size}-#{$i} { @include grid-column($columns:$i,$collapse:null,$float:false); }\n  }\n\n\n\n  @for $i from 0 through $total-columns - 1 {\n    .#{$size}-offset-#{$i} { @include grid-column($offset:$i, $collapse:null,$float:false); }\n  }\n  .#{$size}-reset-order {\n    margin-#{$default-float}: 0;\n    margin-#{$opposite-direction}: 0;\n    left: auto;\n    right: auto;\n    float: $default-float;\n  }\n\n  .column.#{$size}-centered,\n  .columns.#{$size}-centered { @include grid-column($center:true, $collapse:null, $float:false); }\n\n  .column.#{$size}-uncentered,\n  .columns.#{$size}-uncentered {\n    margin-#{$default-float}: 0;\n    margin-#{$opposite-direction}: 0;\n    float: $default-float;\n  }\n\n  // Fighting [class*=\"column\"] + [class*=\"column\"]:last-child\n  .column.#{$size}-centered:last-child,\n  .columns.#{$size}-centered:last-child{\n    float: none;\n  }\n\n  // Fighting .column.<previous-size>-centered:last-child\n  .column.#{$size}-uncentered:last-child,\n  .columns.#{$size}-uncentered:last-child {\n    float: $default-float;\n  }\n\n  .column.#{$size}-uncentered.opposite,\n  .columns.#{$size}-uncentered.opposite {\n    float: $opposite-direction;\n  }\n}\n\n@include exports(\"grid\") {\n  @if $include-html-grid-classes {\n    .row {\n      @include grid-row;\n\n      &.collapse {\n         > .column,\n         > .columns { @include grid-column($collapse:true, $float:false); }\n\n        .row {margin-left:0; margin-right:0;}\n      }\n\n      .row { @include grid-row($behavior:nest);\n        &.collapse { @include grid-row($behavior:nest-collapse); }\n      }\n    }\n\n    .column,\n    .columns { @include grid-column($columns:$total-columns); }\n\n    [class*=\"column\"] + [class*=\"column\"]:last-child { float: $last-child-float; }\n    [class*=\"column\"] + [class*=\"column\"].end { float: $default-float; }\n\n    @media #{$small-up} {\n      @include grid-html-classes($size:small);\n    }\n\n    @media #{$medium-up} {\n      @include grid-html-classes($size:medium);\n      // Old push and pull classes\n      @for $i from 0 through $total-columns - 1 {\n        .push-#{$i} {\n          @include grid-column($push:$i, $collapse:null, $float:false);\n        }\n        .pull-#{$i} {\n          @include grid-column($pull:$i, $collapse:null, $float:false);\n        }\n      }\n    }\n    @media #{$large-up} {\n      @include grid-html-classes($size:large);\n      @for $i from 0 through $total-columns - 1 {\n        .push-#{$i} {\n          @include grid-column($push:$i, $collapse:null, $float:false);\n        }\n        .pull-#{$i} {\n          @include grid-column($pull:$i, $collapse:null, $float:false);\n        }\n      }\n    }\n  }\n  @if $include-xl-html-grid-classes {\n    @media #{$xlarge-up} {\n      @include grid-html-classes($size:xlarge);\n    }\n    @media #{$xxlarge-up} {\n      @include grid-html-classes($size:xxlarge);\n    }\n  }\n}","/*------------------------------------*\\\n    ::Wrappers\n\\*------------------------------------*/\n[class*=\"__inner\"] {\n    @include grid-row;\n}","/*!\r\nTheme Name: Zemplate + Foundation\r\nTheme URI: http://zenman.com\r\nDescription: An empty framework built on Foundation. Love that blue yeti.\r\nVersion: 3.0\r\nAuthor: Dominic Magnifico and Tomas Mulder\r\nTags: zemplate, naked, clean, basic, fondation, semantic\r\n*/\r\n\r\n/*------------------------------------*\\\r\n    ::Index SASS Controller\r\n    ----------------------------------*\r\n    ::Stars\r\n        ::Foundation\r\n        ::Zemplate\r\n    ::Plannets\r\n        ::Base\r\n        ::WordPress (WP)\r\n        ::Plugins\r\n        ::Layouts\r\n    ::Moons\r\n        ::Components\r\n        ::Views\r\n    ::Comets\r\n    ::Stars\r\n\\*------------------------------------*/\r\n\r\n/*------------------------------------*\\\r\n    ::Stars\r\n    ----------------------------------*\r\n    high level stuff goes here, like\r\n    mixins, variables, and grid\r\n    frameworks. Usually things in here\r\n    don't get output: they're just\r\n    tools to use elsewhere.\r\n\\*------------------------------------*/\r\n    /*------------------------------------*\\\r\n        ::Foundation\r\n        ----------------------------------*\r\n        this is the framework we use, mainly\r\n        as our grid system.\r\n    \\*------------------------------------*/\r\n    $row-width: 1140px;           //sets the width of rows\r\n    $include-html-classes: false; //eliminates basic styling (_global.scss)\r\n    @import \"stars/foundation/scss/foundation/components/grid\";\r\n\r\n    /*------------------------------------*\\\r\n        ::Zemplate\r\n        ----------------------------------*\r\n        variables, mixins, extends, and\r\n        other functional helpers you'd like\r\n        available project-wide go here.\r\n    \\*------------------------------------*/\r\n    @import \"stars/zemplate/*\";\r\n\r\n/*------------------------------------*\\\r\n    ::Plannets\r\n    ----------------------------------*\r\n    global styling that affects nearly\r\n    every page goes here, like\r\n    normalize, global text styling,\r\n    or basic and reusable layout rules.\r\n\\*------------------------------------*/\r\n\r\n    /*------------------------------------*\\\r\n        ::Base\r\n        ----------------------------------*\r\n        base is based off normalize and is\r\n        where you should add all high-level\r\n        styling for elements and global\r\n        classes.\r\n    \\*------------------------------------*/\r\n    @import \"planets/base/**/*\";\r\n\r\n    /*------------------------------------*\\\r\n        ::WordPress (WP)\r\n        ----------------------------------*\r\n        built-in wordpress classes like\r\n        .alignleft go here as a baseline\r\n        for handling wordpress's wysiwyg\r\n        output.\r\n    \\*------------------------------------*/\r\n    @import \"planets/wp/**/*\";\r\n\r\n    /*------------------------------------*\\\r\n        ::Plugins\r\n        ----------------------------------*\r\n        global plugin styling or overrides\r\n        go here.\r\n    \\*------------------------------------*/\r\n    @import \"planets/plugins/**/*\";\r\n\r\n    /*------------------------------------*\\\r\n        ::Layouts\r\n        ----------------------------------*\r\n        layouts define block positioning\r\n        for elements and are reusable.\r\n        visual skinning of modules should\r\n        go in moons/views so layouts\r\n        maintain portability between\r\n        sites.\r\n    \\*------------------------------------*/\r\n    @import \"planets/layouts/**/*\";\r\n\r\n/*------------------------------------*\\\r\n    ::Moons\r\n    ----------------------------------*\r\n    styling that affects the individual\r\n    elements on the site goes here,\r\n    like header, contact form, logo,\r\n    navigation, etc.\r\n\\*------------------------------------*/\r\n\r\n    /*------------------------------------*\\\r\n        ::Components\r\n        ----------------------------------*\r\n        components are non-transferable\r\n        modules or elements that wouldn't\r\n        make sense to reuse on future\r\n        sites. because of this, they\r\n        can contain layout and view in\r\n        the same file.\r\n    \\*------------------------------------*/\r\n    @import \"moons/components/**/*\";\r\n\r\n    /*------------------------------------*\\\r\n        ::Views\r\n        ----------------------------------*\r\n        a view skins a layout located in\r\n        planets/layouts. a view should not\r\n        exist if there is no matching\r\n        layout (use a component instead)\r\n    \\*------------------------------------*/\r\n    @import \"moons/views/**/*\";\r\n\r\n/*------------------------------------*\\\r\n    ::Comets\r\n    ----------------------------------*\r\n    styling that affects special\r\n    versions of elements goes here,\r\n    like if the home page has special\r\n    header that differs from every\r\n    other page.\r\n\\*------------------------------------*/\r\n@import \"comets/**/*\";\r\n\r\n/*------------------------------------*\\\r\n    ::Stars\r\n    ----------------------------------*\r\n    styling that is quick and dirty can\r\n    go here, like unrefined styling you\r\n    plan to refine later or plugin/IE\r\n    resets that require !important to\r\n    work.\r\n\\*------------------------------------*/\r\n@import \"debris/**/*\";\r\n","/*------------------------------------*\\\n    ::Mixins\n    ----------------------------------*\n    ::Strip Unit\n    ::Pixels to EMs\n    ::Placeholder Color\n    ::@Font Face Shortener\n    ::Media Queries\n    ::Changing grid-column to col\n    ::Sticky Footer\n    ::Nav\n\\*------------------------------------*/\n\n/*------------------------------------*\\\n    ::Strip Unit\n\\*------------------------------------*/\n//Usage:\n// p {\n//   line-height: strip-unit(16px); // compiles to line-height: 16;\n// }\n@function strip-unit($num) {\n    @return $num / ($num * 0 + 1);\n}\n\n/*------------------------------------*\\\n    ::Pixels to Ems\n\\*------------------------------------*/\n//Usage:\n// converts a pixel value to an em value\n// p {\n//     width: em(16px); // compiles to 1em\n// }\n//\n// or for non-standard base font size:\n// p {\n//     padding: em(16px,8px); // compiles to 2em\n// }\n@function em($value, $base: 16) {\n    $value: strip-unit($value) / strip-unit($base) * 1em;\n    @return $value;\n}\n\n/*------------------------------------*\\\n    ::Placeholder Color\n\\*------------------------------------*/\n@mixin input-placeholder {\n    &.placeholder { @content; }\n    &:-moz-placeholder { @content; }\n    &::-moz-placeholder { @content; }\n    &:-ms-input-placeholder { @content; }\n    &::-webkit-input-placeholder { @content; }\n}\n\n/*------------------------------------*\\\n    ::@Font Face Shortener\n\\*------------------------------------*/\n//Usage:\n//Descript:\n@mixin font-face($font-family, $font-path, $font-weight : normal, $font-style :normal, $font-stretch : normal) {\n    @font-face {\n        font-family: '#{$font-family}';\n\n        src: url('fonts/#{$font-path}.eot');\n        src: url('fonts/#{$font-path}.eot?#iefix') format('embedded-opentype'),\n             url('fonts/#{$font-path}.woff') format('woff'),\n             url('fonts/#{$font-path}.ttf') format('truetype'),\n             url('fonts/#{$font-path}.svg##{$font-family}') format('svg');\n\n        font-weight: $font-weight;\n        font-style: $font-style;\n        font-stretch: $font-stretch;\n    }\n}\n\n/*------------------------------------*\\\n    ::Media Queries\n\\*------------------------------------*/\n//Usage:\n// @include bp($max: 600px){ body { background:#000 } }\n// @include bp($min: 600px){ body { background:#fff } }\n// @include bp($min: 600px, $max: 600px){ body { background:#000 } }\n// @include bp($planetary){ body { background:#fff } }\n\n@mixin bp($media: false, $min: false, $max: false) {\n    @if $media {\n        @media only screen and (max-width: $media) { @content; }\n    }\n    @else if $min and $max {\n        @media only screen and (min-width: $min) and (max-width: $max) { @content; }\n    }\n    @else if $min {\n        @media only screen and (min-width: $min) { @content; }\n    }\n    @else if $max {\n        @media only screen and (max-width: $max) { @content; }\n    }\n\n}\n\n/*------------------------------------*\\\n    ::Changing grid-column to col\n\\*------------------------------------*/\n\n//Just @include col(x);\n@mixin col($columns, $last-column:false, $center:false, $offset:false, $push:false, $pull:false, $collapse:false, $float:left) {\n    @include grid-column($columns, $last-column, $center, $offset, $push, $pull, $collapse, $float);\n}\n\n/*------------------------------------*\\\n    ::Sticky Footer\n\\*------------------------------------*/\n\n// Use this mixin to make the footer sticky.\n// Just add the following line somewhere in your stylesheet:\n//\n//      @include sticky-footer($footer-height:200px);\n//\n\n@mixin sticky-footer(\n    $wrap: '.sticky-footer',\n    $row:  '.sticky-footer__row',\n    $flex: '.sticky-footer__row--flex'){\n\n    html, body {\n        height: 99.99999%;//not 100% to eliminate horizontal scroll\n    }\n    #{$wrap} {\n        display: table;\n        table-layout: fixed;\n        height: 100%;\n        width: 100%;\n    }\n    #{$row} {\n        display: table-row;\n        height: 1px;\n    }\n    #{$flex} {\n        height: auto;\n    }\n}\n\n/*------------------------------------*\\\n    ::Navigation\n\\*------------------------------------*/\n\n// Use this mixin to add basic nav styling.\n// Just add the following code within your styles:\n//\n//\n//      @include nav(\n//          $type: 'nested',            //nav type: dropdown or nested\n//          $nav-container: '.nav',     //& by default\n//          $fade: .3s,                 //fade speed for dropdown (take out for no animation)\n//          $easy-hover: 50px,          //amount of invisible overflow for dropdown (take out to not use)\n//          $easy-hover-top: 0          //set top easy-hover value (you can also set $easy-hover-right, -bottom, and -left separately)\n//      );\n//\n// or to just use the defaults inside any parent element, simply\n//\n//      .nav {\n//          @include nav();\n//      }\n\n@mixin nav(\n    $type: 'nested',\n    $nav-container: '&',\n    $fade: false,\n    $easy-hover: false,\n    $easy-hover-top: false,\n    $easy-hover-right: false,\n    $easy-hover-bottom: false,\n    $easy-hover-left: false\n){\n    @if $type == dropdown {\n        #{$nav-container} {\n            position: relative;\n            z-index: 10;\n            ul {\n                li {\n                    display: block;\n                    float: left;\n                    list-style: none;\n                }\n                ul {\n                    visibility: hidden;\n                    padding: 0;\n                    @if $fade {\n                        transition-property: #{opacity, visibility, background-color};\n                        transition-duration: #{$fade, 0s};\n                        transition-delay: #{0s, $fade};\n                    }\n                    @if $easy-hover {\n                        &:after {\n                            content: \"\";\n                            position: absolute;\n                            @if $easy-hover-top {\n                                top: -1 * $easy-hover-top;\n                            } @else {\n                                top: -1 * $easy-hover;\n                            }\n                            @if $easy-hover-bottom {\n                                bottom:  -1 * $easy-hover-bottom;\n                            } @else {\n                                bottom:  -1 * $easy-hover;\n                            }\n                            @if $easy-hover-left {\n                                left:  -1 * $easy-hover-left;\n                            } @else {\n                                left:  -1 * $easy-hover;\n                            }\n                            @if $easy-hover-right {\n                                right:  -1 * $easy-hover-right;\n                            } @else {\n                                right:  -1 * $easy-hover;\n                            }\n                            background-color: #000;\n                            opacity: 0;\n                            z-index: -1;\n                        }\n                    }\n                }\n            }\n            //local nav\n            li {\n                ul {\n                    display: block;\n                    position: absolute;\n                    opacity: 0;\n                }\n                &:hover {\n                    ul {\n                        opacity: 1;\n                        visibility: visible;\n                        @if $fade {\n                            transition-delay: 0s, 0s;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    @if $type == 'nested' {\n        #{$nav-container} {\n            li {\n                float: left;\n                list-style: none;\n                ul {\n                    padding: 0;\n                }\n                li {\n                    clear: both;\n                }\n                a {\n                    display: block;\n                }\n            }\n            //global nav\n            ul {\n                //local nav\n                ul {\n                    padding:0;\n                    li {\n                        float: left;\n                        clear: both;\n                    }\n                }\n            }\n        }\n    }\n}\n","/*------------------------------------*\\\n    ::404 Stylin\n\\*------------------------------------*/\n.fourofour__content{\n\t@include col(12);\n}","/*------------------------------------*\\\n            (╯°□°）╯︵ ┻━┻\n\\*------------------------------------*/\n\n// just so my eyes don't hurt\nbody {\n    background-color: #00caa9;\n    font-family: 'Vollkorn', serif;\n}\nheader, footer {\n    text-align: center;\n    font-style: italic;\n}\n[class*=\"__inner\"]{\n    max-width: 960px;\n    margin: 0 auto;\n}\na {\n    overflow: hidden;\n    position: relative;\n    display: inline-block;\n    padding: 0 .2em;\n    color: whitesmoke;\n    text-decoration: none;\n    border-radius: .2em;\n    transition: color 300ms, box-shadow 300ms;\n    &.hoverd,\n    &:visited,\n    &:hover {\n        box-shadow: 0 1px 1px rgba(black, .3);\n        color: teal;\n        &:before {\n            top: 0;\n            background-color: aquamarine;\n        }\n    }\n    &:before {\n        content: \"\";\n        position: absolute;\n        z-index: -1;\n        bottom: 0;\n        top: calc(100% - 1px);\n        left: 0;\n        right: 0;\n        background-color: rgba(aquamarine,.5);\n        transition: top 200ms;\n    }\n}\n%h0 {\n    font-family: 'Signika', sans-serif;\n    font-weight: bold; // allows to extend non headings consistently\n    text-shadow: 0 1px 1px rgba(#000,.2);\n    color: aquamarine;\n}\n// %h1 {}\n// %h2 {}\n// %h3 {}\n// %h4 {}\n// %h5 {}\n// %h6 {}\n/* implementations: */%h1, %h2, %h3, %h4, %h5, %h6 {@extend %h0;}h1{@extend%h1;}h2{@extend%h2;}h3{@extend%h3;}h4{@extend%h4;}h5{@extend%h5;}h6{@extend%h6;}\n.resume {\n    padding: 1rem;\n}\n"],"sourceRoot":"/source/"}